buildscript {
    repositories {
        mavenCentral()
        //mavenLocal()//  这会优先查找本地
        jcenter()
    }
    //更改spring-boot version，使其支持PostMapping以及GetMapping
    ext {
        //降低springboot版本为2.2.0
        //报错java.lang.ClassNotFoundException: org.springframework.boot.availability.ApplicationAvailabilityBean
        //需要spring-boot版本至少为2.3.0
        springBootVersion = "2.3.0.RELEASE"
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}
plugins {
    id 'java'
}

apply plugin: 'java'
apply plugin: 'idea'
// 使用spring boot
apply plugin: "org.springframework.boot"
// 使用spring boot的自动依赖管理
apply plugin: 'io.spring.dependency-management'


group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

ext {
    javaVersion = 1.8
    omhSchemaSdkVersion = "1.0.5"
}

group = "org.openmhealth.generator"
version = "1.1.0"

jar {
    baseName = 'data-generator'
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

dependencies {
    implementation 'org.jetbrains:annotations:19.0.0'
    compile "org.apache.commons:commons-math3:3.5"
    //升级guava项目从18.0至20.0
    implementation group: 'com.google.guava', name: 'guava', version: '20.0'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.10.0'
    implementation group: 'org.openmhealth.schema', name: 'omh-schema-sdk', version: '1.2.0'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'org.springframework', name: 'spring-beans', version: '5.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.3.4.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.2.1.RELEASE'
    implementation group: 'org.springframework', name: 'spring-context', version: '5.2.6.RELEASE'
    implementation('org.springframework.boot:spring-boot-starter-web:2.3.4.RELEASE')
    implementation group: 'javax.validation', name: 'validation-api', version: '1.1.0.Final'
    implementation('io.springfox:springfox-swagger2:2.9.2'){
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.prometheus', name: 'simpleclient_pushgateway', version: '0.7.0'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    testImplementation group: 'org.springframework', name: 'spring-test', version: '5.2.6.RELEASE'
    testImplementation group: 'org.testng', name: 'testng', version: '6.8.21'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    runtime group: 'org.hibernate', name: 'hibernate-validator', version: '5.2.4.Final'
    runtime group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    runtime group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.16'
    runtime group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.16'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    runtime group: 'org.yaml', name: 'snakeyaml', version: '1.26'
}

test {
    useTestNG()
    workingDir = '..'
}

task copyArchiveJarToDockerContext(dependsOn: assemble, type: Copy) {
    from 'build/libs'
    into 'docker'
    include "${jar.archiveName}"
    rename { String fileName ->
        fileName.replace("${jar.archiveName}", "${jar.baseName}.jar")
    }
}
build.dependsOn copyArchiveJarToDockerContext

task deleteArchiveJarFromDockerContext(type: Delete) {
    delete "docker/${jar.baseName}.jar"
}
clean.dependsOn deleteArchiveJarFromDockerContext